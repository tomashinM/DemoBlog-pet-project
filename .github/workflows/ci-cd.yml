name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build the Docker images
        run: |
          mv .env.example .env
          docker compose -f docker-compose.ci.yml build

      - name: Start PostgreSQL service
        run: docker compose -f docker-compose.ci.yml up -d --wait

      - name: Run Django tests
        run: |
          docker compose -f docker-compose.ci.yml run django python manage.py makemigrations
          docker compose -f docker-compose.ci.yml run django python manage.py migrate
          docker compose -f docker-compose.ci.yml run django python manage.py test

      - name: Stop containers
        run: docker compose -f docker-compose.ci.yml down

  cd:
    runs-on: ubuntu-latest
    needs: ci
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SERVER_SSH_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}

      - name: Deploy to server
        env:
          REPO_URL: ${{ github.server_url }}/${{ github.repository }}.git
          ENV_FILE: ${{ secrets.ENV_FILE }}
          SSH_AUTH: ${{ secrets.SERVER_USERNAME }}@${{ secrets.DOMAIN_NAME }}
        run: |
          ssh $SSH_AUTH << EOF
            # Stop the existing Docker Compose project
            cd ~/app
            docker compose down || true

            # Clean the existing directory
            cd ~
            rm -rf ~/app

            # Extract the new source code
            git clone $REPO_URL ~/app
            cd ~/app

            # Create new .env file
            echo "$ENV_FILE" > .env

            # Build and start the containers
            docker compose build
            docker compose up -d

            # Clean up
            docker system prune -af
          EOF
